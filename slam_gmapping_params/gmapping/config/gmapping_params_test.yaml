# http://wiki.ros.org/gmapping

inverted_laser: false # изначально не было (находится ли лазер правой стороной вверх (сканы заказываются против часовой стрелки)
# или вверх ногами (сканы заказываются по часовой стрелке)?)
throttle_scans: 1 # не было (обрабатывать 1 из каждого этого количества сканирований (установите большее число, чтобы пропустить больше сканирований))
base_frame: base_link # (рамка прикреплена к мобильной базе)
map_frame: map # рамка прикреплена к карте
odom_frame: odom # рамка прикреплена к системе одометра
map_update_interval: 0.5 # 2.0 в боте (сколько времени (в секундах) между обновлениями карты. 
# уменьшение этого числа приводит к более частому обновлению сетки заполняемости за счет большей вычислительной нагрузки)
maxUrange: 16.0 # 3.0 в боте (максимальный полезный диапазон лазера. Луч обрезается до этого значения) (используется для установки максимального диапазона использования лазерного датчика. Этот диапазон используется для исключения показаний лазера, которые бесполезны для картографирования, это может быть связано с шумом датчика или отражениями от близких препятствий. Это значение задается в метрах, и показания, диапазон которых превышает это значение, игнорируются)
sigma: 0.05 # (управляет стандартным отклонением ядра Гаусса, используемого для сглаживания данных лазерного сканирования)
kernelSize: 1 # (определяет размер ядра, используемого для процесса сопоставления сканирования)
lstep: 0.05 # (управляют размером шага для согласования линейного сканирования)
astep: 0.05 # (управляют размером шага для согласования углового сканирования )
iterations: 5 # (управляет количеством итераций для алгоритма сопоставления сканирования)
lsigma: 0.075 # (управляет стандартным отклонением для функции правдоподобия алгоритма сопоставления сканирования)
ogain: 3.0 # (управляет коэффициентом усиления одометрии для алгоритма сопоставления сканирования)
lskip: 0 # (управляет количеством лазерных сканирований, которые необходимо пропустить перед выполнением сопоставления сканирования)
minimumScore: 0 # не было изначально (определяет минимальный балл, необходимый для совпадения результатов сканирования. позволяет избежать
# скачкообразных оценок позы на больших открытых пространствах при использовании лазерных сканеров с ограниченным радиусом действия (например, 5 м).
# баллы увеличиваются до 600+, попробуйте, например, 50, если возникли проблемы с оценкой прыжков)

# следующие параметры, используемые в модели движения сканера сопоставления, и они управляют неопределенностью движения.
# параметры srr, srt, str и stt используются в модели движения
# алгоритма сопоставления сканирования. Эти параметры контролируют неопределенность движения робота и используются
# для моделирования погрешности в измерениях одометрии.
# • "srr" управляет неопределенностью вращения вокруг оси x.
# • "srt" управляет неопределенностью вращения вокруг оси y.
# • "str" управляет неопределенностью вращения вокруг оси z.
# • "stt" управляет неопределенностью перемещения вдоль осей x, y и z.
# Эти параметры задаются в метрах или радианах, и их следует корректировать в зависимости от конкретного варианта использования и погрешности системы одометрии робота.
# например, если система одометрии робота имеет высокую погрешность при вращении вокруг оси x, значение srr следует увеличить. аналогично, если система
# одометрии робота имеет высокую погрешность при перемещении вдоль осей x, y и z, значение stt следует увеличить.
# важно отметить, что увеличение значений этих параметров увеличит пространство поиска средства сопоставления сканирования, что приведет к более медленному
# сопоставлению сканирования, но также увеличит шансы найти правильное соответствие.
# в то время как уменьшение значений этих параметров приведет к уменьшению пространства поиска средства сопоставления сканирования,
# что приведет к более быстрому сопоставлению сканирования, но также уменьшит шансы найти правильное совпадение.
srr: 0.1 # (ошибка одометрии при переводе как функция перевода (rho/rho))
srt: 0.2 # (ошибка одометрии при переводе как функция вращения (rho/theta))
str: 0.1 # (ошибка одометрии при вращении как функция перевода (theta/rho))
stt: 0.2 # (ошибка одометрии при вращении как функция вращения (theta/theta))

# сильно влияют на быстродействие

linearUpdate: 1.0 # (минимальное расстояние (в метрах), на которое может переместиться робот, не обновив карту)
angularUpdate: 0.5 # (минимальное угол (в радианах), на которое может переместиться робот, не обновив карту)
temporalUpdate: 3.0 # 0.5 в боте (время, за которое карта обновится, даже если робот не совершал перемещения)
resampleThreshold: 0.5 # (используется для управления величиной повторной выборки, которая выполняется, когда поза робота неопределенна. этот параметр
# представляет собой пороговое значение для расстояния между предполагаемым положением робота и положением, определенным на карте. если расстояние
# превышает этот порог, карта будет повторно выбрана для лучшего согласования с предполагаемым положением робота. пороговое значение должно быть установлено
# на значение, соответствующее конкретным датчикам робота и возможностям локализации. более низкие значения приведут к более частой повторной выборке, что может
# повысить точность карты, но также увеличить вычислительные затраты. высокие значения приведут к менее частой повторной выборке, что может снизить вычислительные
# затраты, но также снизить точность карты)
particles: 10 # изначально 30 (100 в боте) (очень сильно влияет на быстродействие) (управляет количеством частиц, используемых в алгоритме фильтрации частиц.
# алгоритм фильтрации частиц - это метод, используемый для оценки позы робота (положения и ориентации) на основе данных датчиков.
# каждая частица представляет возможное состояние робота, и алгоритм фильтрации частиц использует набор частиц для представления распределения вероятностей
# по возможным состояниям робота. чем больше частиц используется, тем точнее будет оцененная поза робота, однако большое количество частиц увеличит
# вычислительные затраты. меньшее количество частиц уменьшит вычислительные затраты, но также снизит точность предполагаемой позы робота.
# в общем, число частиц должно быть установлено достаточно высоким, чтобы гарантировать правильную выборку распределения вероятностей по возможным
# состояниям робота, но не настолько высоким, чтобы вычислительные затраты становились непомерно высокими.
# как правило, в большинстве приложений gmapping используются значения от 100 до 1000 частиц)

# следующие парметры используются для указания размера сетки карты и определения разрешения карты
xmin: -10.0 # (начальный размер карты (в метрах) по оси x)
ymin: -10.0 # (начальный размер карты (в метрах) по оси у)
xmax: 10.0 # (начальный размер карты (в метрах) по оси x)
ymax: 10.0 # (начальный размер карты (в метрах) по оси у)


delta: 0.03 # изначально 0.01 (используется для управления степенью детализации создаваемой карты.
# он представляет размер ячеек в сетке карты в метрах. меньшее значение для дельты приведет к более подробной и точной карте, но также увеличит
# вычислительные затраты и использование памяти. большее значение для дельты приведет к менее подробной и менее точной карте, но также снизит
# вычислительные затраты и использование памяти. обычно он устанавливается на значение, соответствующее возможностям датчика робота и локализации,
# а также размеру отображаемой среды. стоит отметить, что значение дельты также влияет на разрешение карты, меньшая дельта создаст более подробную карту,
# но роботу потребуется больше данных с датчиков, чтобы охватить ту же область)

# следующие параметры используются для управления выборкой данных лазерного датчика в процессе отображения.
llsamplerange: 0.01 # (для управления диапазоном данных линейного лазерного датчика)
llsamplestep: 0.01 # (для управления размером шага данных линейного лазерного датчика)
lasamplerange: 0.005 # (для управления диапазоном данных углового лазерного датчика)
lasamplestep: 0.005 # (для управления размером шага данных углового лазерного датчика)

transform_publish_period: 0.05 # используется для управления частотой публикации преобразования карты. преобразование карты - это матрица преобразования,
# которая описывает взаимосвязь между фреймом карты и базовым фреймом робота. значение этого параметра задается в секундах, оно представляет период
# времени между последовательными публикациями преобразования карты. эта информация используется другими узлами в системе ROS для выравнивания карты
# с данными одометрии робота и датчиков. по умолчанию преобразование публикуется со скоростью данных датчика, если для этого параметра установлено
# значение больше 0, это ограничит скорость публикации преобразования. это может быть полезно для снижения вычислительных затрат и использования памяти,
# например, если робот движется с низкой скоростью, нет необходимости обновлять преобразование карты очень часто. важно отметить, что если период установлен
# слишком высоко, это может привести к отклонению карты от истинного положения робота и снижению точности карты.
occ_thresh: 0.25 # пороговое значение, используемое для определения того, занята ячейка на карте или нет
maxRange: 17.0 # используется для установки максимальной дальности действия лазерного датчика, используемого для картографирования.
# это значение также задается в метрах, и показания, диапазон которых превышает это значение, игнорируются

# *** Таким образом, параметр "maxUrange" используется для исключения показаний лазера, которые бесполезны для отображения,
# поскольку они находятся слишком далеко от датчика или потому, что они являются отражениями, в то время как параметр "maxRange"
# используется для исключения показаний лазера, которые находятся за пределами максимального диапазона датчика, который следует использовать для отображения ***